!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUDGETS	benchmark2.py	/^BUDGETS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]$/;"	v
CLASS	benchmark2.py	/^CLASS = '1000'$/;"	v
EFFECT	benchmark2.py	/^EFFECT = 15$/;"	v
EXPL	benchmark2.py	/^EXPL = []$/;"	v
FIND_CONTEXTS_STRICT	benchmark2.py	/^FIND_CONTEXTS_STRICT = True$/;"	v
FIND_CONTEXTS_STRICT	make_benchmark_effectiveness.py	/^FIND_CONTEXTS_STRICT = False$/;"	v
INPUT_FOLDER	Makefile	/^INPUT_FOLDER=..\/..\/..\/data$/;"	m
MAX_BUDGET_REPS	benchmark2.py	/^MAX_BUDGET_REPS = 10$/;"	v
OUTPUT_FOLDER	Makefile	/^OUTPUT_FOLDER=results$/;"	m
PYTHONPATH	Makefile	/^export PYTHONPATH=..\/..\/..\/src$/;"	m
SENS	benchmark2.py	/^SENS = ['income']$/;"	v
TARGET	benchmark2.py	/^TARGET = 'price'$/;"	v
__convert_to_percentage	make_csv.sh	/^function __convert_to_percentage() {$/;"	f
_convert_to_percentage	make_csv.sh	/^function _convert_to_percentage() {$/;"	f
convert_to_percentage	make_csv.sh	/^function convert_to_percentage() {$/;"	f
create_contexts	benchmark2.py	/^def create_contexts(classes, pool, guard_lines, random_suffix):$/;"	f
do_benchmark	benchmark2.py	/^def do_benchmark(data, classes, random_suffix, sens=SENS, target=TARGET,$/;"	f
do_benchmark	make_benchmark_effectiveness.py	/^def do_benchmark((classes, pool, guard_lines)):$/;"	f
do_benchmark	make_benchmark_performance.py	/^def do_benchmark((contents, feature_range, size_range)):$/;"	f
get_avg_no_of_feat_values	make_benchmark_performance.py	/^def get_avg_no_of_feat_values(contents):$/;"	f
load_file	benchmark2.py	/^def load_file(file_name):$/;"	f
load_file	make_benchmark_effectiveness.py	/^def load_file(file_name):$/;"	f
load_file	make_benchmark_performance.py	/^def load_file(file_name):$/;"	f
magnify_contents	make_benchmark_performance.py	/^def magnify_contents(contents, features):$/;"	f
main	benchmark2.py	/^def main(argv=sys.argv):$/;"	f
main	make_adult.py	/^def main(argv=sys.argv):$/;"	f
main	make_benchmark.py	/^def main(argv=sys.argv):$/;"	f
main	make_benchmark_effectiveness.py	/^def main(argv=sys.argv):$/;"	f
main	make_benchmark_performance.py	/^def main(argv=sys.argv):$/;"	f
main	make_berkeley.py	/^def main(argv=sys.argv):$/;"	f
main	make_medical_bin.py	/^def main(argv=sys.argv):$/;"	f
main	make_medical_reg.py	/^def main(argv=sys.argv):$/;"	f
main	make_overfeat.py	/^def main(argv=sys.argv):$/;"	f
main	make_recommender.py	/^def main(argv=sys.argv):$/;"	f
main	make_scheduling.py	/^def main(argv=sys.argv):$/;"	f
main	make_staples.py	/^def main(argv=sys.argv):$/;"	f
make_plot	benchmark2.py	/^def make_plot(data, n_iterations):$/;"	f
make_price_pools	benchmark2.py	/^def make_price_pools(population, effect):$/;"	f
make_price_pools	make_benchmark_effectiveness.py	/^def make_price_pools(population, effect):$/;"	f
parallelizer	benchmark2.py	/^def parallelizer(args):$/;"	f
parse_line	benchmark2.py	/^def parse_line(line):$/;"	f
parse_line	make_benchmark_effectiveness.py	/^def parse_line(line):$/;"	f
parse_line	make_benchmark_performance.py	/^def parse_line(line):$/;"	f
parse_report_metric	make_csv.sh	/^function parse_report_metric() {$/;"	f
parse_results	make_benchmark_effectiveness.py	/^def parse_results(results, iterations):$/;"	f
parse_results	make_benchmark_performance.py	/^def parse_results(results, iterations):$/;"	f
round	benchmark2.py	/^def round(key):$/;"	f
round	make_benchmark_effectiveness.py	/^def round(key):$/;"	f
shuffle_column_contents	make_benchmark_performance.py	/^def shuffle_column_contents(data, base_features):$/;"	f
usage	benchmark2.py	/^def usage(argv):$/;"	f
usage	make_adult.py	/^def usage(argv):$/;"	f
usage	make_benchmark.py	/^def usage(argv):$/;"	f
usage	make_benchmark_effectiveness.py	/^def usage(argv):$/;"	f
usage	make_benchmark_performance.py	/^def usage(argv):$/;"	f
usage	make_berkeley.py	/^def usage(argv):$/;"	f
usage	make_medical_bin.py	/^def usage(argv):$/;"	f
usage	make_medical_reg.py	/^def usage(argv):$/;"	f
usage	make_overfeat.py	/^def usage(argv):$/;"	f
usage	make_recommender.py	/^def usage(argv):$/;"	f
usage	make_scheduling.py	/^def usage(argv):$/;"	f
usage	make_staples.py	/^def usage(argv):$/;"	f
